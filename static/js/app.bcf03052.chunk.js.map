{"version":3,"sources":["src/assets/styles/index.js","src/containers/login/index.js","src/containers/register/index.js","src/containers/home/index.js","src/containers/details/index.js","src/containers/about/index.js","src/actions/counterSlice.js","src/containers/contact/index.js","src/containers/movieList/index.js","src/reducers/fetchMovieReducer.js","src/types/index.js","src/reducers/fetchMovieDetailsReducer.js","src/reducers/index.js","src/store/configureStore.js","App.js","src/assets/spongegar.png"],"names":["CONTAINER","flex","backgroundColor","alignItems","justifyContent","INPUT_STYLE","padding","borderRadius","width","margin","marginTop","marginBottom","marginVertical","marginHorizontal","BUTTON_STYLE_LOGIN","BUTTON_STYLE_REGISTER","Login","props","SafeAreaView","style","Image","source","require","height","Text","TextInput","placeholder","keyboardType","secureTextEntry","Button","title","TouchableOpacity","onPress","navigation","navigate","Register","Dimensions","get","Details","route","params","rating","genre","ABOUTDATA","content","About","View","FlatList","data","renderItem","item","key","id","keyExtractor","ListEmptyComponent","color","counterSlice","createSlice","name","initialState","count","reducers","increment","state","decrement","actions","Contact","useSelector","console","log","dispatch","useDispatch","fontSize","styles","StyleSheet","create","container","paddingTop","paddingHorizontal","fontWeight","textAlign","searchbox","results","result","heading","popup","paddingVertical","popTitle","closeBtn","MovieList","apiurl","useState","s","selected","setState","onChangeText","text","prevState","onSubmitEditing","axios","then","Search","value","ScrollView","map","TouchableHighlight","imdbID","uri","Poster","resizeMode","Title","Modal","animationType","transparent","visible","imdbRating","Genre","Plot","fetchMovieReducer","action","undefined","isLoading","error","type","payload","fetchMovieDetails","combineReducers","counterReducer","movie","movieDetails","persistConfig","storage","AsyncStorage","persistedReducer","persistReducer","rootReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","TabNav","Navigator","screenOptions","tabBarIcon","iconName","focused","size","Ionicons","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","headerTitle","App","loading","NavigationContainer","headerStyle","headerShown","module","exports"],"mappings":"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","file":"static/js/app.bcf03052.chunk.js","sourcesContent":["export const PRIMARY_COLOR = 'pink';\nexport const SUB_COLOR = 'grey';\n\nexport const CONTAINER = {\n    flex: 1,\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\n\nexport const INPUT_STYLE = {\n    padding: 15,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    width: '50%',\n    margin: 20,\n    marginTop: 20,\n    marginBottom: 10,\n    marginVertical: 20,\n    marginHorizontal: 20\n}\n\nexport const BUTTON_STYLE_LOGIN = {\n    margin: 10,\n    padding: 20,\n    borderRadius: 6,\n    backgroundColor: 'pink'\n}\n\nexport const BUTTON_STYLE_REGISTER = {\n    marginVertical: 20,\n    padding: 20,\n    borderRadius: 6,\n    backgroundColor: 'yellow'\n}","import React from 'react';\nimport { Text, TextInput, Button, TouchableOpacity, SafeAreaView, Image } from 'react-native';\nimport { INPUT_STYLE, CONTAINER, BUTTON_STYLE_LOGIN } from '../../assets/styles';\n\nfunction Login(props) {\n    return (\n        <SafeAreaView style={CONTAINER}>\n            <Image \n                source={require(\"../../assets/spongegar.png\")}\n                style={{ width: 100, height:60 }}\n            />\n            <Text>This is Login</Text>\n\n            <TextInput placeholder=\"Username\" keyboardType=\"default\" style={INPUT_STYLE}/>\n            <TextInput placeholder=\"Password\" keyboardType=\"default\" secureTextEntry={true} style={INPUT_STYLE}/>\n\n            {/* <TextInput placeholder=\"Password\" keyboardType=\"number-pad\"/> */}\n\n            <Button title=\"Login\"></Button>\n\n            <TouchableOpacity style={BUTTON_STYLE_LOGIN}>\n                <Text>Login Here</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity style={BUTTON_STYLE_LOGIN} onPress={() => props.navigation.navigate(\"Register\")}>\n                <Text>Go to Register Screen</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity style={BUTTON_STYLE_LOGIN} onPress={() => props.navigation.navigate(\"TabNav\")}>\n                <Text>Go to Home Screen</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport { Text, TextInput, TouchableOpacity, SafeAreaView, Image } from 'react-native';\nimport { INPUT_STYLE, CONTAINER, BUTTON_STYLE_REGISTER } from '../../assets/styles';\n\nfunction Register() {\n    return(\n        <SafeAreaView style={ CONTAINER }>\n            <Image \n                source={require('../../assets/spongegar.png')}\n                style={{ width: 100, height: 60}}\n            />\n            <Text style={{ marginTop: 40 }}>Register Now</Text>\n\n            <TextInput placeholder=\"Username\" keyboardType=\"default\" style={INPUT_STYLE}/>\n            <TextInput placeholder=\"Password\" keyboardType=\"default\" secureTextEntry={true} style={INPUT_STYLE}/>\n            <TextInput placeholder=\"Email\" keyboardType=\"default\" style={INPUT_STYLE}/>\n\n            <TouchableOpacity style={BUTTON_STYLE_REGISTER}>\n                <Text>Register</Text>\n            </TouchableOpacity>\n        </SafeAreaView>\n    );\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, SafeAreaView, Image, ScrollView, Dimensions, Touchable, ListViewBase, TextInput } from 'react-native';\n\nimport { fetchMovie } from '../../actions';\n\nconst DATA = [\"Data 1\", \"Data 2\", \"Data 3\", \"Data 4\", \"Data 5\", \"Data 6\", \"Data 7\", \"Data 8\", \"Data 9\", \"Data 10\"];\n\nconst images = {\n    logo: require(\"../../assets/spongegar.png\"),\n    rating: 8.0,\n    genre: 'Comedy'\n}\n\nfunction Home(props) {\n    const [state, setState] = useState({\n        s: 'Enter a movie ...',\n        results: [],\n        selected: {}\n    });\n\n    function _renderListView(data) {\n        return (\n            <View style={styles.cardStyle}>\n                <Image \n                    source={images.logo}\n                    style={{ width: 100, height: 60, marginBottom: 20, marginLeft: 100/5}}\n                />\n                <View>\n                    <Text style={{fontSize: 15}}>{data}</Text>\n                    <Text>Rating: {images.rating}</Text>\n                    <Text>Genre: {images.genre}</Text>\n                </View>\n\n                <TouchableOpacity onPress = {() => props.navigation.navigate(\"Details\", { title: data, rating: images.rating, genre: images.genre })} style={styles.detailsButton}>\n                    <Text>More Details</Text>\n                </TouchableOpacity>\n            </View>\n        );\n    };\n\n    return(\n        <SafeAreaView style={{ flex: 1 }}>\n            <View style={{ \n                justifyContent: 'center',\n                alignItems: 'center'\n            }}>\n                <Text style={{ fontSize: 36 }}>InvokeMDB List</Text>\n                <TextInput \n                    style={styles.searchBox}\n                    onChangeText={text => setState(prevState => {\n                        return {...prevState, s: text}\n                    })}\n                    onSubmitEditing={search}\n                    value={state.s}\n                />\n            </View>\n            <ScrollView\n                // horizontal = {true}\n                showsVerticalScrollIndicator = {false}\n                // showsHorizontalScrollIndicator = {false}\n                contentContainerStyle = {{\n                    paddingHorizontal: 20,\n                    // flexWrap: 'wrap',\n                    flexDirection: \"column\",\n                    justifyContent: 'space-around',\n                    alignItems: 'center'\n                }}\n            >\n                {/* <Text>This is Home page</Text> */}\n                { DATA.map((list) => _renderListView(list)) }\n            </ScrollView>\n        </SafeAreaView>\n    );\n}\n\nconst styles = {\n    cardStyle: {\n        // width: 165,\n        width: Dimensions.get('window').width - 50,\n        height: 600,\n        padding: 10,\n        backgroundColor: 'white',\n        borderRadius: 10,\n        marginVertical: 20,\n        marginHorizontal: 10,\n        justifyContent: 'space-around',\n        alignItems: 'flex-start',\n        shadowOffSet: { width: 2, height: 4},\n        shadowColor: \"#171717\",\n        shadowOpacity: 0.3,\n        shadowRadius: 3\n    },\n\n    detailsButton: {\n        padding: 10,\n        backgroundColor: \"lightgrey\",\n        borderRadius: 6\n    },\n\n    searchBox: {\n        fontSize: 20,\n        fontWeight: '300',\n        padding: 20,\n        width: Dimensions.get('window').width - 50,\n        backgroundColor: '#FFF',\n        borderRadius: 8,\n        marginBottom: 40\n    }\n}\n\nexport default Home;","import React from 'react';\nimport { SafeAreaView, Image, Text } from 'react-native';\nimport { CONTAINER } from '../../assets/styles';\n\nfunction Details({route}) {\n    // const [title, setTitle] = useState(\"\");\n    // const [datalist, setDatlist] = useState([]);\n    // useEffect(() => {\n    //     // console.log(\"Props...\", props);\n    //     setTitle(props.route.params.title);\n    // }, [])\n\n    return(\n        <SafeAreaView style={CONTAINER}>\n            <Text>{route.params.title}</Text>\n            <Text>Rating: {route.params.rating}</Text>\n            <Text>Genre: {route.params.genre}</Text>\n\n            <Image \n                source={require(\"../../assets/spongegar.png\")}\n                style={{ width: 100, height: 60 }}\n            />\n        </SafeAreaView>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport { View, Text, FlatList } from 'react-native';\nimport { CONTAINER } from '../../assets/styles';\n\nconst ABOUTDATA = [\n    {\n        title: \"Title One\",\n        content: 'this is content for section One',\n    },\n    {\n        title: \"Title Two\",\n        content: 'this is content for section Two',\n    },\n    {\n        title: \"Title Three\",\n        content: 'this is content for section Three',\n    },\n    {\n        title: \"Title Four\",\n        content: 'this is content for section Four',\n    }\n]\n\nfunction About() {\n    function _renderListView(data) {\n        return (\n            <View key={data.id}>\n                <Text>{data.title}</Text>\n                <Text>{data.content}</Text>\n\n            </View>\n        )\n    }\n\n    function _renderEmptyView() {\n        return(\n            <View\n                style={{\n                    backgroundColor: 'salmon',\n                    color: 'white',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}\n            >\n                <Text>Sorry come back later.</Text>\n                <Text>No data now.</Text>\n            </View>\n        )\n    }\n    return (\n        <View style={{flex:1}}>\n            <Text>This is About</Text>\n            <FlatList \n                // data={[]}\n                data={ABOUTDATA}\n                renderItem={( {item} ) => _renderListView(item)}\n                keyExtractor={(item) => item.id}\n                ListEmptyComponent={() => _renderEmptyView() }\n            />\n        </View>\n\n    )\n}\n\nexport default About;","import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//     count: 0,\n// }\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState: {\n        count: 0\n    },\n    reducers: {\n        increment: (state) => {\n            state.count += 1\n        },\n        decrement: (state) => {\n            state.count -= 1\n        },\n    }\n});\n\nexport const { increment, decrement } = counterSlice.actions;\n\nexport default counterSlice.reducer","import React from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { CONTAINER } from '../../assets/styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { increment, decrement } from '../../actions/counterSlice';\n\n\nfunction Contact() {\n    const count = useSelector((state) => state.count); //mapStateToProps\n    console.log(count);\n    const dispatch = useDispatch(); //mapDispatchToProps\n\n    return(\n        <View style={CONTAINER}>\n            <Text style={{ fontSize: 16, marginVertical: 20 }}>This is Contact</Text>\n\n            <Text style={{ fontSize: 36, marginVertical: 20 }}>Count: {count.count}</Text>\n\n            {/* <Button title=\"Increment\" onPress={() => dispatch(increment())} /> */}\n            <Button title=\"Increment\" onPress={() => dispatch(increment())} />\n\n            <Button title=\"Decrement\" onPress={() => dispatch(decrement())}/>\n\n        </View>\n\n    )\n}\n\nexport default Contact;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { StyleSheet, Text, View, TextInput, ScrollView, Image, TouchableHighlight, Modal } from 'react-native';\n\nfunction MovieList() {\n  const apiurl = \"http://www.omdbapi.com/?apikey=5f8972e6\"\n  const [state, setState] = useState({\n    s: \"Enter a movie...\",\n    results: [],\n    selected: {}\n  })\n\n  const search = () => {\n    axios(apiurl + \"&s=\" + state.s).then(({data}) => {\n      let results = data.Search;\n\n      setState(prevState => {\n        return {...prevState, results: results}\n      });\n    })\n  }\n\n  const openPopup = id => {\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\n      let result = data;\n      console.log(result);\n      setState(prevState => {\n        return {...prevState, selected: result }\n      })\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Invoke DB</Text>\n      <TextInput \n        style={styles.searchbox}\n        onChangeText={text => setState(prevState => {\n          return {...prevState, s: text}\n        })}\n        onSubmitEditing= {search}\n        value={state.s}\n      />\n      <ScrollView style={styles.results}>\n        {state.results.map(result => (\n          <TouchableHighlight \n            key={result.imdbID} \n            onPress={() => openPopup(result.imdbID)}\n          >\n            <View  style={styles.result}>\n              <Image \n                source={{ uri: result.Poster}}\n                style={{\n                  width: '100%',\n                  height: 300,\n                }}\n                resizeMode=\"cover\"\n              />\n              <Text style={styles.heading}>{result.Title}</Text>\n            </View> \n          </TouchableHighlight>\n        ))}\n      </ScrollView>\n\n      <Modal \n        animationType=\"fade\"\n        transparent={false}\n        visible={(typeof state.selected.Title != \"undefined\")}\n      >\n        <ScrollView style={styles.popup}>\n          <Text style={styles.popTitle}>{state.selected.Title}</Text>\n          <Text style={{marginBottom: 20}}>Rating: {state.selected.imdbRating}</Text>\n          <Text style={{marginBottom: 20}}>Genre: {state.selected.Genre}</Text>\n          <Text>Plot: {state.selected.Plot}</Text>\n        </ScrollView>\n        <TouchableHighlight\n          onPress={() => setState(prevState => {\n            return { ...prevState, selected: {} }\n          })}\n        >\n          <Text style={styles.closeBtn}>Close</Text>\n        </TouchableHighlight>\n      </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#223343',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingTop: 70,\n    paddingHorizontal: 20\n  },\n  title: {\n    color: '#fff',\n    fontSize: 32,\n    fontWeight: '700',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  searchbox: {\n    fontSize: 20,\n    fontWeight: '300',\n    padding: 20,\n    width: '100%',\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    marginBottom: 40\n  },\n  results: {\n    flex:1\n  },\n  result: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 20\n  },\n  heading: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: '700',\n    padding: 20,\n    backgroundColor: '#445565'\n  },\n  popup: {\n    paddingHorizontal: 20,\n    paddingVertical: 70\n  },\n  popTitle: {\n    fontSize: 24,\n    fontWeight: '700',\n    marginBottom: 5\n  },\n  closeBtn: {\n    padding: 20,\n    color: \"#fff\",\n    fontSize: 20,\n    fontWeight: '700',\n    backgroundColor: '#2484c4'\n  }\n});\n\nexport default MovieList;\n","import { FETCH_MOVIE, FETCH_MOVIE_SUCCESS, FETCH_MOVIE_FAIL } from \"../types\";\n\nconst defaultState = () => ({\n    isLoading: false,\n    data: {},\n    error: null,\n});\n\nconst fetchMovieReducer = (state, action) => {\n    if (state === undefined) { return defaultState(); }\n\n    switch(action.type) {\n        case FETCH_MOVIE:\n            return {\n                isLoading: true,\n                data: {},\n                error: null,\n            };\n        case FETCH_MOVIE_SUCCESS:\n            return {\n                isLoading: false,\n                data: action.payload,\n                error: null,\n            };\n        case FETCH_MOVIE_FAIL:\n            return {\n                isLoading: false,\n                data: {},\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default fetchMovieReducer;","export const INCREASE = 'INCREASE';\nexport const DECREASE = 'DECREASE';\n\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\nexport const FETCH_MOVIE_SUCCESS = 'FETCH_MOVIE_SUCCESS';\nexport const FETCH_MOVIE_FAIL = 'FETCH_MOVIE_FAIL';\n\nexport const FETCH_MOVIE_DETAILS = 'FETCH_MOVIE_DETAILS';\nexport const FETCH_MOVIE_DETAILS_SUCCESS = 'FETCH_MOVIE_DETAILS_SUCCESS';\nexport const FETCH_MOVIE_DETAILS_FAIL = 'FETCH_MOVIE_DETAILS_FAIL';","import { FETCH_MOVIE_DETAILS, FETCH_MOVIE_DETAILS_SUCCESS, FETCH_MOVIE_DETAILS_FAIL } from \"../types\";\n\nconst defaultState = () => ({\n    isLoading: false,\n    data: {},\n    error: null,\n})\n\nconst fetchMovieDetails = (state, action) => {\n    if (state === undefined) { return defaultState(); }\n\n    switch(action.type) {\n        case FETCH_MOVIE_DETAILS:\n            return {\n                isLoading: true,\n                data: {},\n                error: null,\n            };\n        case FETCH_MOVIE_DETAILS_SUCCESS:\n            return {\n                isLoading: false,\n                data: action.payload,\n                error: null,\n            };\n        case FETCH_MOVIE_DETAILS_FAIL:\n            return {\n                isLoading: false,\n                data: {},\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n}\n\nexport default fetchMovieDetails;","import { combineReducers } from \"redux\";\n// import countReducer from './countReducer';\nimport counterReducer from \"../actions/counterSlice\";\nimport fetchMovieReducer from './fetchMovieReducer';\nimport fetchMovieDetails from './fetchMovieDetailsReducer';\n\nexport default combineReducers ({\n    count: counterReducer,\n    movie: fetchMovieReducer,\n    movieDetails: fetchMovieDetails,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport rootReducer from '../reducers/index';\n\n//Saves all the data in a storage that is placed in the \"root\" (basically the main html file)\nconst persistConfig = {\n    key: 'root',\n    // version: 1,\n    storage: AsyncStorage,\n}\n\n//used to \"persist\" the reducer files\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n//functions similarly as \"export default configureStore\"\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n      }),\n  })\n  \nlet persistor = persistStore(store)\n\nexport { store, persistor };","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport Login from './src/containers/login';\nimport Register from './src/containers/register';\nimport Home from './src/containers/home';\nimport Details from './src/containers/details';\nimport About from './src/containers/about';\nimport Contact from './src/containers/contact';\nimport MovieList from './src/containers/movieList';\n\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './src/store/configureStore'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction TabNav () {\n  return (\n    <Tab.Navigator screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size}) => {\n        let iconName;\n\n        if(route.name === 'Home') {\n          iconName = focused ? 'md-home-sharp' : 'md-home-outline';\n        } else if (route.name === 'About') {\n          iconName = focused ? 'person-circle-sharp' : 'person-circle-outline';\n        } else if (route.name === 'Contact') {\n          iconName = focused ? 'phone-portrait-sharp' : 'phone-portrait-outline';\n        }\n\n        return <Ionicons name={iconName} size={20} color={color} />\n      },\n\n      tabBarActiveTintColor: 'gold',\n      tabBarInactiveTintColor: 'gray',\n    })}>\n      <Tab.Screen \n        name=\"Home\" \n        component={MovieList}\n        options={{\n          headerTitle: \"My Town\",\n          // tabBarIcon: () => (\n          //   <Ionicons name=\"md-home-outline\" size={24} color='black'/>\n          //   )\n        }}  \n      />\n      <Tab.Screen name=\"About\" component={About}/>\n      <Tab.Screen name=\"Contact\" component={Contact}/>\n    </Tab.Navigator>\n  )\n}\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <NavigationContainer>\n          <Stack.Navigator>\n            <Stack.Screen \n              name=\"Login\" \n              component={Login} \n              options={{\n                // headerShown: false,\n                headerStyle: {\n                  backgroundColor: 'pink'\n                },\n                // headerRight: null\n              }}\n            />\n\n            <Stack.Screen name=\"Register\" component={Register}/>\n            <Stack.Screen \n              name=\"TabNav\" \n              component={TabNav}\n              options={{\n                headerShown: false\n              }}  \n            />\n            <Stack.Screen name=\"Details\" component={Details}/>\n\n          </Stack.Navigator>\n        </NavigationContainer>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/spongegar.d62da4e1.png\";"],"sourceRoot":""}